{"name":"Forte","tagline":"Javascript randomization library","body":"<a name=\"Number\"></a>\r\n## Number\r\n**Kind**: global class  \r\n\r\n* [Number](#Number)\r\n  * [.binary(limit)](#Number.binary) ⇒ <code>number</code> &#124; <code>boolean</code>\r\n  * [.octal(limit)](#Number.octal) ⇒ <code>number</code> &#124; <code>boolean</code>\r\n  * [.hex(limit)](#Number.hex) ⇒ <code>number</code> &#124; <code>boolean</code>\r\n  * [.decimal(limit)](#Number.decimal) ⇒ <code>number</code> &#124; <code>boolean</code>\r\n  * [.integer(limit)](#Number.integer) ⇒ <code>number</code> &#124; <code>boolean</code>\r\n  * [.float(limit)](#Number.float) ⇒ <code>number</code> &#124; <code>boolean</code>\r\n  * [.percent(limit, sign)](#Number.percent) ⇒ <code>string</code> &#124; <code>boolean</code>\r\n\r\n<a name=\"Number.binary\"></a>\r\n### Number.binary(limit) ⇒ <code>number</code> &#124; <code>boolean</code>\r\nBinary\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| limit | <code>\\*</code> | \r\n\r\n<a name=\"Number.octal\"></a>\r\n### Number.octal(limit) ⇒ <code>number</code> &#124; <code>boolean</code>\r\nOctal\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| limit | <code>\\*</code> | \r\n\r\n<a name=\"Number.hex\"></a>\r\n### Number.hex(limit) ⇒ <code>number</code> &#124; <code>boolean</code>\r\nHexadecimal\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| limit | <code>\\*</code> | \r\n\r\n<a name=\"Number.decimal\"></a>\r\n### Number.decimal(limit) ⇒ <code>number</code> &#124; <code>boolean</code>\r\nDecimal\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| limit | <code>\\*</code> | \r\n\r\n<a name=\"Number.integer\"></a>\r\n### Number.integer(limit) ⇒ <code>number</code> &#124; <code>boolean</code>\r\nAlias for decimal\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| limit | <code>\\*</code> | \r\n\r\n<a name=\"Number.float\"></a>\r\n### Number.float(limit) ⇒ <code>number</code> &#124; <code>boolean</code>\r\nFloat\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| limit | <code>\\*</code> | \r\n\r\n<a name=\"Number.percent\"></a>\r\n### Number.percent(limit, sign) ⇒ <code>string</code> &#124; <code>boolean</code>\r\nPercent\r\n\r\n**Kind**: static method of <code>[Number](#Number)</code>  \r\n**Returns**: <code>string</code> &#124; <code>boolean</code> - percent  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| limit | <code>string</code> &#124; <code>number</code> &#124; <code>Array</code> | Array[min, max], min = 0 by default |\r\n| sign | <code>string</code> | adds to end of string |\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}